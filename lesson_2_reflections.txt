What happens when you initialize a repository? Why do you need to create it?
	-Creates hidden .git folder
	-Starts tracking metadata and commits
	
How is the staging area different from the working directory and the repository? What value do you think it offers?
	-It's temporary.
	-It allows the sorting of changes into logical units
	-Allows for one last overview before commiting
	
How can you use the staging area to make sure you have one commit per logical change?
	-git diff to compare working directory to staging area
	-git diff --staged compare staging area to latest commit
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	-Experimental features, program variants
	-Can always access functional code
	
How do the diagrams help you visualize the branch structure?
	-Allow you to seen commits' parents

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	-Single branch
	-Diagram shows correct heritance from both parent branches
	
What are the pros and cons of Git's automatic merging vs. always doing merges manually?
	Pros:
	-Automatic
	-Quicker
	
	Cons:
	-Can't merge everything
	-Might drag along vestigal code